-- STUDENT ID: 103585238 STUDENT NAME: HUYNH QUI DANG

-- TOUR (TOURNAME, DESCRIOTION)
-- PRIMARY KEY (TOURNAME)
-- FOREIGN KEY (DESCRIOTION) REFERENCES INFORMATION 

-- EVENT (EVENTYEAR, EVENTMONTH, EVENTDAY, FEE)
-- PRIMARY KEY (EVENTYEAR, EVENTMONTH, EVENTDAY, FEE)
-- FOREIGN KEY (FEE) REFERENCES COST 

-- BOOKING (DATEBOOKED, PAYMENT)
-- PRIMARY KEY (DATEBOOKED, PAYMENT)

-- CLIENT (CLIENTID, SURNAME, GIVENNAME, GENDER)
-- PRIMARY KEY (CLIENTID)
-- FOREIGN KEY (SURNAME, GIVENNAME, GENDER) REFERENCES PERSONALINFO

IF OBJECT_ID('TOUR') IS NOT NULL
DROP TABLE TOUR; 
IF OBJECT_ID('EVENT') IS NOT NULL
DROP TABLE EVENT;
IF OBJECT_ID('BOOKING') IS NOT NULL
DROP TABLE BOOKING; 
IF OBJECT_ID('CLIENT') IS NOT NULL
DROP TABLE CLIENT; 

GO

CREATE TABLE TOUR(
    TOURNAME NVARCHAR(100) PRIMARY KEY, 
    DESCRIOTION NVARCHAR(500),
);

CREATE TABLE EVENT(
    TOURNAME NVARCHAR(100) PRIMARY KEY, 
    EVENTYEAR INT,
    EVENTMONTH NVARCHAR(3),
    EVENTDAY INT,
    EVENTFEE MONEY
);

CREATE TABLE CLIENT(
    CLIENTID INT PRIMARY KEY, 
    SURNAME NVARCHAR(100) NOT NULL,
    GIVNNAME NVARCHAR(100) NOT NULL,
    GENDER NVARCHAR(1) check (GENDER in ('M', 'F', 'I')) 
);

CREATE TABLE BOOKING(
    CLIENTID INT,
    TOURNAME NVARCHAR(100),
    EVENTMONTH NVARCHAR(3),
    EVENTDAY INT,
    EVENTYEAR INT,
    PAYMENT MONEY,
    DATEBOOKED DATE,
)

SELECT * FROM TOUR
SELECT * FROM EVENT
SELECT * FROM CLIENT
SELECT * FROM BOOKING 