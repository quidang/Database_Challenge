-- STUDENT ID: 103585238 STUDENT NAME: HUYNH QUI DANG

-- TOUR (TOURNAME, DESCRIOTION)
-- PRIMARY KEY (TOURNAME)
-- FOREIGN KEY (DESCRIOTION) REFERENCES INFORMATION 

-- EVENT (EVENTYEAR, EVENTMONTH, EVENTDAY, FEE)
-- PRIMARY KEY (EVENTYEAR, EVENTMONTH, EVENTDAY, FEE)
-- FOREIGN KEY (FEE) REFERENCES COST 

-- BOOKING (DATEBOOKED, PAYMENT)
-- PRIMARY KEY (DATEBOOKED, PAYMENT)

-- CLIENT (CLIENTID, SURNAME, GIVENNAME, GENDER)
-- PRIMARY KEY (CLIENTID)
-- FOREIGN KEY (SURNAME, GIVENNAME, GENDER) REFERENCES PERSONALINFO

IF OBJECT_ID('TOUR') IS NOT NULL
DROP TABLE TOUR; 
IF OBJECT_ID('EVENT') IS NOT NULL
DROP TABLE EVENT;
IF OBJECT_ID('BOOKING') IS NOT NULL
DROP TABLE BOOKING; 
IF OBJECT_ID('CLIENT') IS NOT NULL
DROP TABLE CLIENT; 

GO

CREATE TABLE TOUR(
    TOURNAME NVARCHAR(100),
    DESCRIOTION NVARCHAR(500),
);

CREATE TABLE EVENT(
    TOURNAME NVARCHAR(100),
    EVENTMONTH NVARCHAR(3),
    EVENTYEAR INT,
    EVENTDAY INT,
    EVENTFEE MONEY
);

CREATE TABLE CLIENT(
    CLIENTID INT,
    SURNAME NVARCHAR(100),
    GIVENNAME NVARCHAR(100),
    GENDER NVARCHAR(1)
); 

CREATE TABLE BOOKING(
    CLIENTID INT,
    TOURNAME NVARCHAR(100),
    EVENTMONTH NVARCHAR(3),
    EVENTDAY INT,
    EVENTYEAR INT,
    PAYMENT MONEY,
    DATEBOOKED DATE,
);

INSERT INTO CLIENT (CLIENTID, SURNAME, GIVENNAME, GENDER) VALUES 
('1', 'Price', 'Taylor', 'M'),
('2', 'Gamble', 'Ellyse', 'F'),
('3', 'Tan', 'Tilly', 'F'),
('4', 'Qui', 'Dang', 'M');

INSERT INTO BOOKING (CLIENTID, TOURNAME, EVENTMONTH, EVENTDAY, EVENTYEAR, PAYMENT, DATEBOOKED) VALUES
('1', 'North', 'Jan','9', '2016',	'200','2015-12-10'),
('2', 'North', 'Jan','9','2016',	'200','2015-12-16'),
('1', 'North', 'Feb','13','2016',	'225','2016-01-8'),
('2', 'North', 'Feb','13','2016',	'125','2016-01-14'),
('3', 'North', 'Feb','13','2016','225','2016-02-3'),
('1', 'South', 'Jan','9', '2016',	'200','2015-12-10'),
('2', 'South', 'Jan','16','2016',	'200','2015-12-18'),
('3', 'South', 'Jan','16','2016',	'200','2016-01-9'),
('2', 'West', 'Jan','29','2016',	'225','2015-12-17'),
('3', 'West', 'Jan','29','2016',	'200','2015-12-18');


INSERT INTO EVENT (TOURNAME, EVENTMONTH, EVENTDAY, EVENTYEAR, EVENTFEE) VALUES
('North','Jan', '9', '2016','200'),
('North','Feb', '13', '2016','225'),
('South','Jan', '9', '2016','200'),
('South', 'Jan', '16', '2016','200'),
('West','Jan', '29', '2016', '225');

INSERT INTO TOUR (TOURNAME, DESCRIOTION) VALUES
('North', 'Tour of wineries and outlets of the Bendigo and Castemaine region'),
('South', 'Tour of wineries and outlets of Mornington Peninsula'),
('West', 'Tour of wineries and outlets of Geelong and Otways region');

-- TASK 4 QUERY 1
-- SELECT GIVENNAME, SURNAME, BOOKING.TOURNAME, DESCRIOTION, BOOKING.EVENTYEAR, BOOKING.EVENTMONTH, BOOKING.EVENTDAY, EVENTFEE, DATEBOOKED, PAYMENT 
-- FROM CLIENT, BOOKING, EVENT, TOUR

-- TASK 4 QUERY 2
-- SELECT EVENTMONTH, TOURNAME, COUNT(*) AS 'NUMBER OF BOOKINGS' 
-- FROM BOOKING
-- GROUP BY EVENTMONTH, TOURNAME

--TASK 4 QUERY 3
-- SELECT AVG(BOOKING.PAYMENT) AS 'THE AVG PAY FOR BOOKINGS'
-- FROM BOOKING

--TASK 5 (Getting an error where Create View has to be the first statement in a query batch. Going to skip this question as time is running out.)
-- CREATE VIEW QUERY 
-- AS
-- SELECT GIVENNAME, SURNAME, BOOKING.TOURNAME, DESCRIOTION, BOOKING.EVENTYEAR, BOOKING.EVENTMONTH, BOOKING.EVENTDAY, EVENTFEE, DATEBOOKED, PAYMENT
-- FROM CLIENT, BOOKING, EVENT, TOUR 

--TASK 6
SELECT * FROM CLIENT
SELECT COUNT(CLIENTID) AS 'NUMBER OF CLIENTS'
FROM CLIENT

SELECT * FROM BOOKING
SELECT COUNT(BOOKING.DATEBOOKED) AS 'NUMBER OF BOOKINGS'
FROM BOOKING

-- The two tests that I have conducted above is showcasing the amount of clients are in the client tables and for the second test. 
-- I have demonstrated counting code identifies there are 10 bookings that have been made according to the dates that we were give. 